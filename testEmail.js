// import nodemailer from 'nodemailer';
// import dotenv from 'dotenv';

// dotenv.config();

// const transporter = nodemailer.createTransport({
//   host: process.env.SMTP_HOST, // smtp-relay.brevo.com
//   port: Number(process.env.SMTP_PORT), // 587
//   secure: false, // –¥–ª—è –ø–æ—Ä—Ç—É 587
//   auth: {
//     user: process.env.SMTP_USER, // —Ç–≤—ñ–π email
//     pass: process.env.SMTP_PASSWORD, // –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π SMTP –∫–ª—é—á
//   },
//   tls: {
//     rejectUnauthorized: false, // –æ–ø—Ü—ñ–π–Ω–æ, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ self-signed errors
//   },
// });

// const mailOptions = {
//   from: process.env.SMTP_FROM,
//   to: process.env.ADMIN_EMAIL, // –º–æ–∂–µ—à –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Å–≤–æ—é –ø–æ—à—Ç—É
//   subject: 'üîî –¢–µ—Å—Ç–æ–≤–∏–π –ª–∏—Å—Ç –∑ Brevo SMTP',
//   html: `<h2>–ü—Ä–∏–≤—ñ—Ç!</h2><p>–¶–µ —Ç–µ—Å—Ç–æ–≤–∏–π –ª–∏—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ SMTP-–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è.</p>`,
// };

// transporter.sendMail(mailOptions, (error, info) => {
//   if (error) {
//     console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:', error);
//   } else {
//     console.log('‚úÖ –õ–∏—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ:', info.response);
//   }
// });
import dotenv from 'dotenv';
import { sendEmail } from '././src/config/sendEmail.js'; // –∑–∞–º—ñ–Ω–∏ —à–ª—è—Ö –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π

dotenv.config();

const runTest = async () => {
  try {
    await sendEmail({
      to: process.env.ADMIN_EMAIL, // –∞–±–æ –≤–≤–µ–¥–∏ –ø—Ä—è–º–æ —Ç—É—Ç: '—Ç–≤–æ—è_–ø–æ—à—Ç–∞@gmail.com'
      subject: 'üì® –¢–µ—Å—Ç –≤—ñ–¥ sendEmail()',
      html: '<h2>–¶–µ —Ç–µ—Å—Ç–æ–≤–∏–π –ª–∏—Å—Ç –∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥—É!</h2><p>–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É—Å–ø—ñ—à–Ω–∞!</p>',
    });
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π –ª–∏—Å—Ç —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ');
  } catch (err) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ª–∏—Å—Ç–∞:', err);
  }
};

runTest();
