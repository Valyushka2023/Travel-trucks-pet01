import { createAsyncThunk } from '@reduxjs/toolkit';
import axios from 'axios';

// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∑–º—ñ–Ω–Ω—É –æ—Ç–æ—á–µ–Ω–Ω—è
const BACKEND_BASE_URL = import.meta.env.VITE_API_URL;

// =========================================================================
// ‚úÖ –û–ù–û–í–õ–ï–ù–ù–Ø: –î–æ–¥–∞–Ω–æ –ø—Ä–∏–π–æ–º —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 'lang'
// =========================================================================
export const getCampers = createAsyncThunk(
  'campers/getCampers',
  // üí• –ó–ú–Ü–ù–ê: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ–ø–µ—Ä –ø—Ä–∏–π–º–∞—î 'lang' —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
  async (lang = 'en', { rejectWithValue }) => {
    try {
      // –§–æ—Ä–º—É—î–º–æ URL –∑–∞–ø–∏—Ç—É –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –º–æ–≤–∏
      const requestUrl = `${BACKEND_BASE_URL}/campers?lang=${lang}`;

      // üí• –ó–ú–Ü–ù–ê: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ URL –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –º–æ–≤–∏
      const response = await axios.get(requestUrl);
      const campersData = response.data;

      if (Array.isArray(campersData)) {
        return campersData;
      } else {
        return rejectWithValue('Incorrect data format from API');
      }
    } catch (error) {
      return rejectWithValue(error.message);
    }
  }
);
