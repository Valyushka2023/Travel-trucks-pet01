// import { useTranslation } from 'react-i18next';
// import PropTypes from 'prop-types';
// import css from './VehicleDetails.module.css';

// function VehicleDetails({ camper }) {
//   const { t } = useTranslation('vechicle_details');
//   if (!camper) {
//     return (
//       <div className={css['vehicleContainer']}>Loading vehicle details...</div>
//     );
//   }

//   return (
//     <div className={css['vehicle-container']}>
//       <h3>{t('vechicle_details')}</h3>

//       <div className={css.divider}></div>
//       <div className={css['vehicle-info']}>
//         <div className={css.texts}>
//           <p>{t('form')}</p>
//           <p>{camper.form || 'N/A'}</p>
//         </div>
//         <div className={css.texts}>
//           <p>{t('length')}</p>
//           <p>{camper.length || 'N/A'}</p>
//         </div>
//         <div className={css.texts}>
//           <p>{t('width')}</p>
//           <p>{camper.width || 'N/A'}</p>
//         </div>
//         <div className={css.texts}>
//           <p>{t('height')}</p>
//           <p>{camper.height || 'N/A'}</p>
//         </div>
//         <div className={css.texts}>
//           <p>{t('tank')}</p>
//           <p>{camper.tank || 'N/A'}</p>
//         </div>
//         <div className={css.texts}>
//           <p>{t('consumption')}</p>
//           <p>{camper.consumption || 'N/A'}</p>
//         </div>
//       </div>
//     </div>
//   );
// }

// VehicleDetails.propTypes = {
//   camper: PropTypes.shape({
//     form: PropTypes.string,
//     length: PropTypes.string,
//     width: PropTypes.string,
//     height: PropTypes.string,
//     tank: PropTypes.string,
//     consumption: PropTypes.string,
//   }),
// };

// export default VehicleDetails;
import { useTranslation } from 'react-i18next';
import PropTypes from 'prop-types';
import css from './VehicleDetails.module.css';

function VehicleDetails({ camper }) {
  const { t } = useTranslation('vechicle_details');
  const { t: t_units } = useTranslation('units');

  if (!camper) {
    return (
      <div className={css['vehicle-container']}>Loading vehicle details...</div>
    );
  }

  // üí° –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —á–∏—Å–ª–æ–≤–æ—ó —á–∞—Å—Ç–∏–Ω–∏ (—ñ–≥–Ω–æ—Ä—É—é—á–∏ –æ–¥–∏–Ω–∏—Ü—ñ –±–µ–∫–µ–Ω–¥–∞)
  const getNumericValue = value => {
    if (typeof value !== 'string') return value;
    // –ó–Ω–∞–π—Ç–∏ —á–∏—Å–ª–æ, –≤–∫–ª—é—á–∞—é—á–∏ –¥–µ—Å—è—Ç–∫–æ–≤—ñ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–∏ (–∫—Ä–∞–ø–∫–∏ –∞–±–æ –∫–æ–º–∏)
    const match = value.match(/^-?\d+([.,]\d+)?/);
    return match ? match[0] : value;
  };

  // üîß –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å –¥–ª—è –æ–¥–∏–Ω–∏—Ü—å
  const formatValue = (key, value) => {
    if (!value) return 'N/A';

    // –û—Ç—Ä–∏–º—É—î–º–æ –ª–∏—à–µ —á–∏—Å–ª–æ–≤—É —á–∞—Å—Ç–∏–Ω—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "6.4" –∑–∞–º—ñ—Å—Ç—å "6.4m")
    const numericValue = getNumericValue(value);

    switch (key) {
      case 'length':
      case 'width':
      case 'height':
        return `${numericValue} ${t_units('m')}`;
      case 'tank':
        return `${numericValue} ${t_units('l')}`;
      case 'consumption':
        return `${numericValue}${t_units('l_per_100km')}`;
      default:
        return value;
    }
  };

  // üí° –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—É –∑–Ω–∞—á–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏
  const translateForm = formValue => {
    if (!formValue) return 'N/A';

    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—é—á –ø–µ—Ä–µ–∫–ª–∞–¥—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 'alcove' -> 'form_alcove'
    // –¶–µ –≤–∏–º–∞–≥–∞—î, —â–æ–± –∫–ª—é—á—ñ —É –ª–æ–∫–∞–ª—è—Ö –±—É–ª–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ `form_` + [–∑–Ω–∞—á–µ–Ω–Ω—è –∑ –±–µ–∫–µ–Ω–¥–∞]
    const translationKey = `form_${formValue.toLowerCase().replace(/ /g, '_')}`;

    // –Ø–∫—â–æ –ø–µ—Ä–µ–∫–ª–∞–¥ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ, —ñ–Ω–∞–∫—à–µ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
    const translated = t(translationKey);
    return translated === translationKey ? formValue : translated;
  };

  return (
    <div className={css['vehicle-container']}>
      <h3>{t('vechicle_details')}</h3>

      <div className={css.divider}></div>

      <div className={css['vehicle-info']}>
        <div className={css.texts}>
          <p>{t('form')}</p>
          {/* ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ translateForm –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—É –∑–Ω–∞—á–µ–Ω–Ω—è */}
          <p>{translateForm(camper.form)}</p>
        </div>
        <div className={css.texts}>
          <p>{t('length')}</p>
          <p>{formatValue('length', camper.length)}</p>
        </div>
        <div className={css.texts}>
          <p>{t('width')}</p>
          <p>{formatValue('width', camper.width)}</p>
        </div>
        <div className={css.texts}>
          <p>{t('height')}</p>
          <p>{formatValue('height', camper.height)}</p>
        </div>
        <div className={css.texts}>
          <p>{t('tank')}</p>
          <p>{formatValue('tank', camper.tank)}</p>
        </div>
        <div className={css.texts}>
          <p>{t('consumption')}</p>
          <p>{formatValue('consumption', camper.consumption)}</p>
        </div>
      </div>
    </div>
  );
}

VehicleDetails.propTypes = {
  camper: PropTypes.shape({
    form: PropTypes.string,
    length: PropTypes.string,
    width: PropTypes.string,
    height: PropTypes.string,
    tank: PropTypes.string,
    consumption: PropTypes.string,
  }),
};

export default VehicleDetails;
