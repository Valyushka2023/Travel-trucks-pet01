// import PropTypes from 'prop-types';
// import CloseButton from '../../Ui/Buttons/CloseButton/CloseButton.jsx';
// import css from './DescriptionPopup.module.css';

// const DescriptionPopup = ({ description, onClose }) => {
//   const handleContentClick = e => {
//     e.stopPropagation();
//   };

//   const handleKeyPress = e => {
//     // –û–±—Ä–æ–±–∫–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –æ–≤–µ—Ä–ª–µ—è
//     if (e.key === 'Enter' || e.key === ' ') {
//       e.preventDefault();
//       onClose();
//     }
//   };

//   return (
//     <div
//       className={css['backdrop-in-card']}
//       onClick={onClose}
//       onKeyDown={e => {
//         // –ó–∞–∫—Ä–∏—Ç—Ç—è –Ω–∞ Escape —î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º
//         if (e.key === 'Escape') onClose();
//         // –ó–∞–∫—Ä–∏—Ç—Ç—è –Ω–∞ Enter/Space
//         handleKeyPress(e);
//       }}
//       role="button" // –ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
//       tabIndex={0} // –î–æ–∑–≤–æ–ª—è—î —Ñ–æ–∫—É—Å—É–≤–∞—Ç–∏—Å—è
//     >
//       <div
//         className={css['popup-content']}
//         onClick={handleContentClick}
//         // –ó—É–ø–∏–Ω–∫–∞ –ø–æ—à–∏—Ä–µ–Ω–Ω—è –ø–æ–¥—ñ—ó –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏, —â–æ–± –Ω–µ –∑–∞–∫—Ä–∏—Ç–∏ –æ–≤–µ—Ä–ª–µ–π
//         onKeyDown={handleContentClick}
//         role="dialog" // –í–∫–∞–∑—É—î, —â–æ —Ü–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
//         aria-modal="true" // –í–∫–∞–∑—É—î —Å–∫—Ä—ñ–Ω—Ä—ñ–¥–µ—Ä–∞–º, —â–æ —ñ–Ω—à–∏–π –≤–º—ñ—Å—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ
//       >
//         <CloseButton
//           onClick={onClose}
//           className={css['popup-close-button']}
//           ariaLabel="Close description"
//         />
//         <p className={css['description-text']}>{description}</p>
//       </div>
//     </div>
//   );
// };

// DescriptionPopup.propTypes = {
//   description: PropTypes.string.isRequired,
//   onClose: PropTypes.func.isRequired,
// };

// export default DescriptionPopup;
import PropTypes from 'prop-types';
import CloseButton from '../../Ui/Buttons/CloseButton/CloseButton.jsx';
import css from './DescriptionPopup.module.css';

const DescriptionPopup = ({ description, onClose }) => {
  const handleContentClick = e => {
    e.stopPropagation();
  };

  const handleKeyPress = e => {
    // –û–±—Ä–æ–±–∫–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –æ–≤–µ—Ä–ª–µ—è
    if (e.key === 'Enter' || e.key === ' ') {
      e.preventDefault();
      onClose();
    }
  };

  return (
    <div
      className={css['backdrop-in-card']}
      onClick={onClose}
      onKeyDown={e => {
        // –ó–∞–∫—Ä–∏—Ç—Ç—è –Ω–∞ Escape —î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º
        if (e.key === 'Escape') onClose();
        // –ó–∞–∫—Ä–∏—Ç—Ç—è –Ω–∞ Enter/Space
        handleKeyPress(e);
      }}
      role="button"
      tabIndex={0}
    >
      <div
        className={css['popup-content']}
        // üëá –í–ò–î–ê–õ–ï–ù–û: onClick={handleContentClick}
        // üëá –í–ò–î–ê–õ–ï–ù–û: onKeyDown={handleContentClick}
        // *–û–±—Ä–æ–±–Ω–∏–∫ onClick –≤–∂–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω, –æ—Å–∫—ñ–ª—å–∫–∏ –≤—ñ–Ω –ª–∏—à–µ –∑—É–ø–∏–Ω—è–≤ –ø–æ—à–∏—Ä–µ–Ω–Ω—è –ø–æ–¥—ñ—ó
        // *–Ω–∞ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π –µ–ª–µ–º–µ–Ω—Ç, —â–æ —î –æ–≤–µ—Ä–ª–µ—î–º.
        role="dialog" // –¶–µ –∫–æ—Ä–µ–∫—Ç–Ω–∞ —Ä–æ–ª—å
        aria-modal="true" // –¶–µ –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –∞—Ç—Ä–∏–±—É—Ç
      >
        <CloseButton
          onClick={onClose}
          className={css['popup-close-button']}
          ariaLabel="Close description"
        />
        <p className={css['description-text']}>{description}</p>
      </div>
    </div>
  );
};

DescriptionPopup.propTypes = {
  description: PropTypes.string.isRequired,
  onClose: PropTypes.func.isRequired,
};

export default DescriptionPopup;
